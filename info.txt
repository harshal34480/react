# Parcel

- Dev build
- local server
- HMR - Hot module replacement
- File watching algorithm - written in c++
- Caching - faster builds
- Image Optimization
- minification
- Bundling
- compress
- consistance hashing (read)
- code splitting (read)
- differential bundling (read)
- differential bundling (read) = to support older browsers
- diagnostic
- error handeling
- HTTPS
- tree shaking - remove unused code for us
- different dev and production bundles

1. what is emmet?
-> Emmet is a tool that helps web developers write HTML and CSS code more quickly and efficiently.
   It's a shorthand syntax that allows you to type abbreviations and then expand them into full HTML or CSS code.
   This can save a lot of time and reduce the amount of manual typing needed when creating web pages.

2. differnce between library and framework?
->  library is collection of pacakages that perform specific operation.
    whereas a framework contains the basic flow and architechture of an application.
    The major difference between them is the complexity. Libraries contain a number of methods that a developer can just call whenever they write code.
    React js is library and Angular is Framework.
    The framework provides the flow of a software application and tells the developer what it needs and calls the code provided by the developer as required. 
    If a library is used, the application calls the code from the library.

// JSX => babel transpiles it to react.createElement => reactElement-Js object => HTMLElement(render)

// const heading = React.createElement("div", { id: "parent" }, [
//   React.createElement("div", { id: "child" }, [
//     React.createElement("h1", { id: "element" }, "Hey iam harshal"),
//     React.createElement(
//       "h2",
//       { id: "element" },
//       "i'am learning react from basics to advance"
//     ),
//   ]),
//   React.createElement("div", { id: "child" }, [
//     React.createElement("h1", { id: "element" }, "i'am element one"),
//     React.createElement("h2", { id: "element" }, "i'am element two"),
//   ]),
// ]);

// console.log(heading);
// const root = ReactDOM.createRoot(document.getElementById("root"));

// root.render(heading);

// react element
//const heading = <h1 className="heading">Hello My name is Harshal</h1>;

// react component => return react element
// react functional component is a javascript function which return jsx
// functional component

// we use curly bracket to inject js into ous jsx
// the Curly bracket sanatized the given js we pass into it
// we can also js inside curly bracket

// to render the react component we have to put component inside angular tag
// then bable understand it is react component and then it convert into html and view on browser


// low level design
// Header
//   - logo
//   - links
// Body
//   - search bar
//   - restro container
//     - restro card
// Footer
//   - address
//   - links

. there are two type ot import/export 
1. default export 
=> export default component;
=> import component from "path"
2.named export
=> export const component;
=> import {component} from "path";

// react hooks 
- noraml javascript function in react 